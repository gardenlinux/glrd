#!/usr/bin/env python3
from glrd.query import *

def main():
    args = parse_arguments()
    
    # Load releases
    releases = load_all_releases(args.type, args.input_type, args.input_url, args.input_file_prefix, args.input_format, args.no_input_split)

    # Filter releases by version and type
    releases = filter_releases(releases, release_types=args.type, version=args.version)

    # Filter by active or archived status
    if args.active:
        releases = filter_active_releases(releases)
    if args.archived:
        releases = filter_archived_releases(releases)

    # Sort releases
    releases = sort_releases(releases)

    # Display the latest release if requested
    if args.latest:
        release = find_latest_release(releases)
        if release:
            format_output(args, [release], args.output_format, args.fields, no_header=args.no_header)
        else:
            print("No active releases found.")
    else:
        # Display all filtered releases

        format_output(args, releases, args.output_format, args.fields, no_header=args.no_header)

if __name__ == "__main__":
    main()

